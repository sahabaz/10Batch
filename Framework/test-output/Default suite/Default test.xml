<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="qsp" ignored="0" name="Default test" tests="1" failures="0" timestamp="11 Mar 2018 08:58:16 GMT" time="6.266" errors="0">
  <testcase name="@BeforeMethod preCondition" time="6.243" classname="generic.BaseTest">
    <failure type="java.io.FileNotFoundException" message="C:\Users\admin\Desktop\testData.xls (The process cannot access the file because it is being used by another process)">
      <![CDATA[java.io.FileNotFoundException: C:\Users\admin\Desktop\testData.xls (The process cannot access the file because it is being used by another process)
	at java.io.RandomAccessFile.open0(Native Method)
	at java.io.RandomAccessFile.open(Unknown Source)
	at java.io.RandomAccessFile.<init>(Unknown Source)
	at org.apache.poi.poifs.nio.FileBackedDataSource.newSrcFile(FileBackedDataSource.java:161)
	at org.apache.poi.poifs.nio.FileBackedDataSource.<init>(FileBackedDataSource.java:64)
	at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:219)
	at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:167)
	at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:254)
	at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:226)
	at org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:205)
	at generic.Excel.readData(Excel.java:15)
	at generic.BaseTest.preCondition(BaseTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:599)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase name="@AfterMethod postCondition" time="0.0" classname="generic.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase name="validLogin" time="0.0" classname="script.TestScript">
    <skipped/>
  </testcase> <!-- validLogin -->
</testsuite> <!-- Default test -->
